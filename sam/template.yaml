AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-python3.9

  Sample SAM Template for lambda-python3.9

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: PortkeyUsers
      UsernameAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: true
  UserPoolTokenClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
       - USER_PASSWORD_AUTH
  UserPoolUser:
     Type: AWS::Cognito::UserPoolUser
     Properties:
       DesiredDeliveryMediums:
         - EMAIL
       Username: "jared.warren+pk@gmail.com"
       UserPoolId: !Ref UserPool
  PortkeyApi:
     DependsOn: UserPool
     Type: AWS::Serverless::Api
     Properties:
       Name: PortkeyApi
       StageName: "prod"
       Cors:
         AllowMethods: "'*'"
         AllowHeaders: "'*'"
         AllowOrigin: "'*'"
       Auth:
         Authorizers:
           CognitoAuthorizer:
             UserPoolArn: !GetAtt "UserPool.Arn"
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            RestApiId: !Ref PortkeyApi
            Method: get
  AddNamedDestinationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: add_named_destination/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy: {"TableName": "Portkeys"}
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /destination/{mark}
            RestApiId: !Ref PortkeyApi
            Method: put
            Auth:
              Authorizer: CognitoAuthorizer
  GetDestinationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_destination/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy: {"TableName": "Portkeys"}
      Events:
        GetDestination:
          Type: Api
          Properties:
            Path: /{mark}
            RestApiId: !Ref PortkeyApi
            Method: get
  PortkeyTable:
    Type: AWS::DynamoDB::Table
    Properties:
        TableName: Portkeys
        AttributeDefinitions:
          - 
            AttributeName: "Mark"
            AttributeType: "S"
        KeySchema:
          - 
            AttributeName: "Mark"
            KeyType: "HASH"
        BillingMode: "PAY_PER_REQUEST"
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
